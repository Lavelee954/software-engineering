version: '3.8'

services:
  # NATS Message Bus
  nats:
    image: nats:2.10-alpine
    container_name: trading-nats
    ports:
      - "4222:4222"
      - "8222:8222"
    command: ["-js", "-m", "8222"]
    networks:
      - trading-network

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: trading-postgres
    environment:
      POSTGRES_DB: trading_system
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - trading-network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: trading-redis
    ports:
      - "6379:6379"
    networks:
      - trading-network

  # Prometheus Monitoring
  prometheus:
    image: prom/prometheus:latest
    container_name: trading-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - trading-network

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: trading-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - trading-network

  # System Trading Core
  trading-core:
    build: .
    container_name: trading-core
    ports:
      - "8080:8080"
    environment:
      # Database
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: trading_system
      DB_USER: postgres
      DB_PASSWORD: password
      
      # NATS
      NATS_URL: nats://nats:4222
      
      # Redis
      REDIS_ADDR: redis:6379
      
      # Security
      JWT_SECRET: your-32-character-jwt-secret-key-here
      
      # Risk Limits
      RISK_MAX_POSITION_SIZE: 0.1
      RISK_MAX_VAR: 0.02
      RISK_MAX_LEVERAGE: 2.0
      RISK_MAX_DAILY_LOSS: 0.05
      RISK_MAX_CONCENTRATION: 0.2
      
      # Logging
      LOG_LEVEL: info
      LOG_FORMAT: json
      
      # Server
      SERVER_HOST: 0.0.0.0
      SERVER_PORT: 8080
    depends_on:
      - nats
      - postgres
      - redis
    networks:
      - trading-network
    restart: unless-stopped

volumes:
  postgres_data:
  grafana_data:

networks:
  trading-network:
    driver: bridge
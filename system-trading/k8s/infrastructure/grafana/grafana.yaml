apiVersion: v1
kind: Service
metadata:
  name: grafana-service
  namespace: trading-system
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: dashboard
spec:
  type: ClusterIP
  ports:
    - name: web
      port: 3000
      targetPort: 3000
      protocol: TCP
  selector:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: dashboard

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: trading-system
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: dashboard
    app.kubernetes.io/version: "latest"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: grafana
      app.kubernetes.io/component: dashboard
  template:
    metadata:
      labels:
        app.kubernetes.io/name: grafana
        app.kubernetes.io/component: dashboard
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          env:
            - name: GF_SECURITY_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: trading-secrets
                  key: GF_SECURITY_ADMIN_PASSWORD
            - name: GF_USERS_ALLOW_SIGN_UP
              value: "false"
            - name: GF_INSTALL_PLUGINS
              value: "grafana-clock-panel,grafana-simple-json-datasource"
            - name: GF_SECURITY_ADMIN_USER
              value: "admin"
            - name: GF_PATHS_DATA
              value: "/var/lib/grafana"
            - name: GF_PATHS_LOGS
              value: "/var/log/grafana"
            - name: GF_PATHS_PLUGINS
              value: "/var/lib/grafana/plugins"
            - name: GF_PATHS_PROVISIONING
              value: "/etc/grafana/provisioning"
          ports:
            - name: web
              containerPort: 3000
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          volumeMounts:
            - name: grafana-storage
              mountPath: /var/lib/grafana
            - name: grafana-datasources
              mountPath: /etc/grafana/provisioning/datasources
              readOnly: true
            - name: grafana-dashboards-config
              mountPath: /etc/grafana/provisioning/dashboards
              readOnly: true
            - name: grafana-dashboards
              mountPath: /var/lib/grafana/dashboards
              readOnly: true
          livenessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /api/health
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
      volumes:
        - name: grafana-storage
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: grafana-datasources
          configMap:
            name: grafana-datasources
        - name: grafana-dashboards-config
          configMap:
            name: grafana-dashboards-config
        - name: grafana-dashboards
          configMap:
            name: grafana-dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: trading-system
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: config
data:
  datasources.yaml: |
    apiVersion: 1
    datasources:
      - name: Prometheus
        type: prometheus
        access: proxy
        url: http://prometheus-service:9090
        isDefault: true
        editable: true

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards-config
  namespace: trading-system
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: config
data:
  dashboards.yaml: |
    apiVersion: 1
    providers:
      - name: 'trading-system'
        orgId: 1
        folder: 'Trading System'
        type: file
        disableDeletion: false
        updateIntervalSeconds: 10
        allowUiUpdates: true
        options:
          path: /var/lib/grafana/dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: trading-system
  labels:
    app.kubernetes.io/name: grafana
    app.kubernetes.io/component: config
data:
  trading-system-overview.json: |
    {
      "dashboard": {
        "title": "Trading System Overview",
        "panels": [
          {
            "title": "NATS Messages",
            "type": "graph",
            "targets": [
              {
                "expr": "rate(nats_messages_total[5m])",
                "legendFormat": "Messages/sec"
              }
            ]
          },
          {
            "title": "Agent Health",
            "type": "stat",
            "targets": [
              {
                "expr": "sum(up{job=\"python-agents\"})",
                "legendFormat": "Active Agents"
              }
            ]
          }
        ]
      }
    } 
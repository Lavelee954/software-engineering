apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: trading-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: 6379
      protocol: TCP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
apiVersion: v1
kind: Service
metadata:
  name: redis-exporter
  namespace: trading-system
  labels:
    app.kubernetes.io/name: redis-exporter
    app.kubernetes.io/component: monitoring
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 9121
      targetPort: 9121
      protocol: TCP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: trading-system
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache
    app.kubernetes.io/version: "7"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: redis
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        app.kubernetes.io/name: redis
        app.kubernetes.io/component: cache
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: redis
          image: redis:7-alpine
          args:
            - redis-server
            - --appendonly
            - "yes"
            - --save
            - "900 1"
            - --save
            - "300 10"
            - --save
            - "60 10000"
          ports:
            - name: redis
              containerPort: 6379
          resources:
            requests:
              memory: "64Mi"
              cpu: "50m"
            limits:
              memory: "256Mi"
              cpu: "200m"
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          livenessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            exec:
              command:
                - redis-cli
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 1
        
        # Redis Exporter for Prometheus monitoring
        - name: redis-exporter
          image: oliver006/redis_exporter:v1.56.0
          env:
            - name: REDIS_ADDR
              value: "redis://localhost:6379"
          ports:
            - name: metrics
              containerPort: 9121
          resources:
            requests:
              memory: "32Mi"
              cpu: "25m"
            limits:
              memory: "64Mi"
              cpu: "50m"
          livenessProbe:
            httpGet:
              path: /metrics
              port: 9121
            initialDelaySeconds: 30
            periodSeconds: 30
      volumes:
        - name: redis-storage
          persistentVolumeClaim:
            claimName: redis-pvc 
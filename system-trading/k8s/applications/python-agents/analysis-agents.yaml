apiVersion: apps/v1
kind: Deployment
metadata:
  name: news-analysis
  namespace: trading-system
  labels:
    app.kubernetes.io/name: news-analysis
    app.kubernetes.io/component: python-agent
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: news-analysis
      app.kubernetes.io/component: python-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: news-analysis
        app.kubernetes.io/component: python-agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: news-analysis
          image: python-agents:latest  # Replace with your image registry
          imagePullPolicy: Always
          command: ["python", "-m", "agents.news_analysis.runner"]
          env:
            # NATS Configuration
            - name: NATS_URL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NATS_URL
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: LOG_LEVEL
            
            # News Analysis Configuration
            - name: NEWS_AGENT_NAME
              value: "$(POD_NAME)"
            - name: NEWS_MAX_HISTORY_ITEMS
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NEWS_MAX_HISTORY_ITEMS
            - name: NEWS_RELEVANCE_THRESHOLD
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NEWS_RELEVANCE_THRESHOLD
            - name: NEWS_IMPACT_THRESHOLD
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NEWS_IMPACT_THRESHOLD
            - name: NEWS_ENABLE_LANGGRAPH
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NEWS_ENABLE_LANGGRAPH
            - name: NEWS_ENABLE_A2A_COMMUNICATION
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NEWS_ENABLE_A2A_COMMUNICATION
            
            # Pod metadata
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: metrics
              containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sentiment-analysis
  namespace: trading-system
  labels:
    app.kubernetes.io/name: sentiment-analysis
    app.kubernetes.io/component: python-agent
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: sentiment-analysis
      app.kubernetes.io/component: python-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: sentiment-analysis
        app.kubernetes.io/component: python-agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: sentiment-analysis
          image: python-agents:latest  # Replace with your image registry
          imagePullPolicy: Always
          command: ["python", "-m", "agents.sentiment_analysis.runner"]
          env:
            # NATS Configuration
            - name: NATS_URL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NATS_URL
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: LOG_LEVEL
            
            # Sentiment Analysis Configuration
            - name: SENTIMENT_AGENT_NAME
              value: "$(POD_NAME)"
            - name: SENTIMENT_WINDOW_MINUTES
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: SENTIMENT_WINDOW_MINUTES
            - name: SENTIMENT_TREND_ANALYSIS_HOURS
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: SENTIMENT_TREND_ANALYSIS_HOURS
            - name: SENTIMENT_MAX_HISTORY_ITEMS
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: SENTIMENT_MAX_HISTORY_ITEMS
            - name: SENTIMENT_CONFIDENCE_THRESHOLD
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: SENTIMENT_CONFIDENCE_THRESHOLD
            - name: SENTIMENT_ENABLE_LANGGRAPH
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: SENTIMENT_ENABLE_LANGGRAPH
            - name: SENTIMENT_ENABLE_A2A_COMMUNICATION
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: SENTIMENT_ENABLE_A2A_COMMUNICATION
            
            # Pod metadata
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: metrics
              containerPort: 8080
          resources:
            requests:
              memory: "256Mi"
              cpu: "200m"
            limits:
              memory: "1Gi"
              cpu: "1000m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: news-analysis-hpa
  namespace: trading-system
  labels:
    app.kubernetes.io/name: news-analysis
    app.kubernetes.io/component: python-agent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: news-analysis
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: sentiment-analysis-hpa
  namespace: trading-system
  labels:
    app.kubernetes.io/name: sentiment-analysis
    app.kubernetes.io/component: python-agent
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: sentiment-analysis
  minReplicas: 1
  maxReplicas: 5
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 70 
apiVersion: v1
kind: Service
metadata:
  name: central-router-service
  namespace: trading-system
  labels:
    app.kubernetes.io/name: central-router
    app.kubernetes.io/component: python-agent
spec:
  type: ClusterIP
  ports:
    - name: metrics
      port: 8080
      targetPort: 8080
      protocol: TCP
  selector:
    app.kubernetes.io/name: central-router
    app.kubernetes.io/component: python-agent

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: central-router
  namespace: trading-system
  labels:
    app.kubernetes.io/name: central-router
    app.kubernetes.io/component: python-agent
    app.kubernetes.io/version: "1.0.0"
spec:
  replicas: 1  # Central Router should be singleton
  selector:
    matchLabels:
      app.kubernetes.io/name: central-router
      app.kubernetes.io/component: python-agent
  template:
    metadata:
      labels:
        app.kubernetes.io/name: central-router
        app.kubernetes.io/component: python-agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      containers:
        - name: central-router
          image: python-agents:latest  # Replace with your image registry
          imagePullPolicy: Always
          command: ["python", "run_central_router.py"]
          env:
            - name: NATS_URL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: NATS_URL
            - name: LOG_LEVEL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: ROUTER_LOG_LEVEL
            - name: HEALTH_CHECK_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: ROUTER_HEALTH_CHECK_INTERVAL
            - name: CLEANUP_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: ROUTER_CLEANUP_INTERVAL
            - name: STATS_INTERVAL
              valueFrom:
                configMapKeyRef:
                  name: python-agents-config
                  key: ROUTER_STATS_INTERVAL
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          ports:
            - name: metrics
              containerPort: 8080
          resources:
            requests:
              memory: "128Mi"
              cpu: "100m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          livenessProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
          readinessProbe:
            httpGet:
              path: /ready
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
          startupProbe:
            httpGet:
              path: /health
              port: 8080
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 10 